/*
Implement the class complex which represents the complex data type. Implement the following:
1. Constructor(including a default constructor which creates a complex number 0+0i)
2. Overload operator + to add two complex numbers
3. Overload operator * to multiply two complex numbers
4. Overload operators << and >> to print and read complex numbers
*/

#include<iostream>
using namespace std;
class Complex{
    float x;
    float y;
    
    public:
    Complex(){
        x=0;
        y=0;
    }
    
    Complex operator +(Complex);
    Complex operator *(Complex);
    friend istream &operator>>(istream &input, Complex &t){
        cout<<"Enter the real part: ";
        cin>>t.x;
        cout<<"Enter the imaginary part: ";
        cin>>t.y;
        return input;
    }
    
    friend ostream &operator<<(ostream &out, Complex &t){
        out<<t.x<<"+"<<t.y<<"i\n";
        return out;
    }
};

Complex Complex:: operator +(Complex c){
    Complex temp;
    temp.x=x+c.x;
    temp.y=y+c.y;
    return temp;
} 

Complex Complex::operator *(Complex c){
    Complex temp2;
    temp2.x=(x*c.x);
    temp2.y=(x*c.y);
    cout<<temp2.x<<"+"<<temp2.y<<"i";
    return temp2;
}

int main(){
    Complex c1, c2, c3, c4;
    cout<<"Default constructor value: ";
    cout<<c1;
    cout<<"\nEnter the first number: ";
    cin>>c1;
    cout<<"\nEnter the second number: ";
    cin>>c2;
    c3=c1+c2;
    c4=c1*c2;
    cout<<"The addition is: "<<c3;
    cout<<"The multiplication is: "<<c4;
    return 0;
}